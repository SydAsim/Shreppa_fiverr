SHERPA – Fully Responsive, Animated, Frontend-Only React MVP Prompt
(With Engaging Landing Page, Images, and Vulnerability Feed)

Prompt:

You are an expert React.js + Tailwind CSS + Framer Motion developer and UI/UX designer.
Build me a fully responsive, animated, production-ready MVP for SHERPA — an AI-powered vulnerability management platform.
No backend is required — simulate all data with JSON and mock API calls.

The app must include:

A long, animated, image-rich landing page.

Fully functional dashboard with sidebar navigation.

Vulnerability report feed feature both in landing page & dashboard.

Responsive layouts for mobile, tablet, desktop.

Smooth animations & polished UI.

Tech Stack
React.js (latest stable version)

Tailwind CSS

Framer Motion (animations)

Lucide React or Heroicons (icons)

Context API + Hooks for state management

Vercel/Netlify-ready build

Custom favicon & improved SHERPA logo

Pages & Features
1. Landing Page (Fully Responsive & Animated)
Hero Section:

Animated background (gradient shift + floating elements)

Large SHERPA logo & improved tagline

Headline with typewriter effect for keywords

CTA buttons (“Get Started” → Login, “Learn More” → scroll to features)

Relevant images/illustrations related to cybersecurity, AI, and vulnerability scanning

Features Section:

Cards with icons, titles, and descriptions

Slide/fade animations on scroll

Security & AI-themed illustrations

How It Works Section:

Step-by-step flow with animated diagrams

Vulnerability Feed Section:

Simple form: Vulnerability Name, Severity, Assigned To, Description

On submit → Save to mock data so it appears in Dashboard’s table

Success animation/toast

Testimonials Section:

Animated testimonial cards with photos and quotes

Final CTA Footer:

Eye-catching, gradient-animated background with “Sign In” button

2. Login Page
Username: admin

Password: password123

Correct login → go to Dashboard

Wrong login → animated error toast

3. Dashboard (Clean, Sidebar Layout)
Sidebar Navigation:

Dashboard, Vulnerabilities, AI Chat, Reports, Analytics, Team, Settings, Logout

Top Bar:

Search field, Notifications icon, User avatar dropdown

Dashboard Overview Cards:

Key metrics with animated counters

Vulnerability Feed Form (also accessible here)

Vulnerabilities Table:

Columns: Name, Severity, Status, Assigned To, Due Date

Sorting & filtering

Color-coded badges

Assign button → updates mock data instantly

Admin Add Vulnerability Modal:

Fields: Name, Severity, Status, Assigned To, Due Date, Description

4. AI Chat Feature
Chat window:

User messages (right side)

AI responses (left side with typing animation)

Simulated AI replies from predefined response list

Sidebar shortcut to access AI chat

5. Other Pages
Reports: Static charts using Chart.js or Recharts (mock data)

Analytics: Progress bars, graphs, animated KPI counters

Team: List of mock team members with avatars, roles, status

Settings: Dark/Light mode toggle, profile update form

6. Responsiveness
Mobile-first layout

Sidebar collapses into bottom nav on mobile

Cards stack vertically on small screens

Landing page images resize & reflow smoothly

Tables scroll horizontally on small screens

7. Data Handling
/src/mockData/vulnerabilities.json → initial vulnerability list

/src/mockData/team.json → team members

/src/utils/api.js → mock API functions with Promises + delays

State stored in React Context

8. Styling
Tailwind CSS with custom theme

Light/Dark mode stored in localStorage

Consistent use of shadows, rounded corners, smooth hover effects

9. Deliverables
Provide:

Full folder structure

All React component files with full paths

Tailwind config file

Mock JSON data files

Custom favicon & improved logo (SVG)

README.md with setup & deployment instructions

10. Output Format
No placeholders (“…” not allowed)

Full code for every file

Label each file with full path before code block

End output with Netlify/Vercel deployment commands

End of Prompt